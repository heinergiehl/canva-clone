name: CI/CD â€“ Canva Clone
on:
  push:
    branches: [ master ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Runtime port your app listens on
      APP_PORT: 3003
    steps:
      # 1) Get the code
      - name: Checkout
        uses: actions/checkout@v3
      # 2) Install Bun
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
      # 3) Create .env.production on the runner for CI build
      - name: Create .env.production for CI build
        run: |
          cat > .env.production <<EOF
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_PIXABAY_KEY=${{ secrets.NEXT_PUBLIC_PIXABAY_KEY }}
          POSTGRES_VERSION=${{ secrets.POSTGRES_VERSION }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}
          APP_PORT=${{ env.APP_PORT }}
          PRODUCTION=true
          EOF
      # 4) Run your build to catch errors early
      - name: Install & Build (CI check)
        run: |
          bun install
          bun run build
      # 5) Prepare SSH key for deployment
      - name: Copy SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
      # 6) SSH into VPS and deploy
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ~/.ssh/id_ed25519
          script: |
            set -e
            # A) Regenerate .env.production on the server
            cat > /var/www/myapps/canva-clone/.env.production <<EOF
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
            NEXT_PUBLIC_PIXABAY_KEY=${{ secrets.NEXT_PUBLIC_PIXABAY_KEY }}
            POSTGRES_VERSION=${{ secrets.POSTGRES_VERSION }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_DB }}
            APP_PORT=${{ env.APP_PORT }}
            PRODUCTION=true
            EOF
            # B) Start/ensure Postgres via Docker Compose
            cd /var/www/myapps/canva-clone
            docker compose up -d db
            # C) Pull latest code, rebuild & reload with PM2
            git pull origin master
            bun install
            bun run build
            pm2 reload ecosystem.config.js --only canva-clone --env production
